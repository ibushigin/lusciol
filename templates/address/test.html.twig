{% extends 'base.html.twig' %}

{% block title %}View All Shops{% endblock %}

{% block body %}

    <div class="container-fluid">

        <div class="row">
            <div class="col-12 col-md-3" id="addressList">
                <div class="container">
                    <div class="search input-group col-12">
                        <div class="input-group-prepend ">
                            <span class="input-group-text" id="input-addon"><i class="fas fa-search"></i></span>
                        </div>
                        <input type="text" class="form-control border-secondary shadow-none" id="searchBar" aria-describedby="input-addon">
                    </div>
                    <div class="searchCat col-12">
                        <span id="searchCat1"><img src="{{ asset("img/pictorond/restaurant.png") }}" alt=""></span>
                        <span id="searchCat2"><img src="{{ asset("img/pictorond/shop.png") }}" alt=""></span>
                        <span id="searchCat3"><img src="{{ asset("img/pictorond/soins.png") }}" alt=""></span>
                        <span id="searchCat4"><img src="{{ asset("img/pictorond/sortie.png") }}" alt=""></span>
                    </div>
                </div>
                <div class="addressLoop" id="addressLoop">
                    {% for item in address %}
                        <a href="#" class="linkToSingle">
                            <article class="oneShop" data-id="{{ item.subCategory.category.label }}_{{ item.id }}">
                                <h2 class="text-center name">{{ item.name }}</h2><br>
                                <p>
                                    <strong>Sous-Categorie :</strong ><span class="subCat">{{ item.subCategory.label }}</span> <br>
                                    <strong>Categorie :</strong><span class="cat">{{ item.subCategory.category.label }}</span> <br>
                                    <strong>Réduction :</strong> {{ item.discount }}<br>
                                </p>
                            </article>
                        </a>
                    {% endfor %}
                </div>
            </div>
            <div class="col-12 col-md-9">
                <div id="map"></div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>

        $(function(){
            //Initialisation de la carte
            //Ne pas toucher sous peine de torture


            let bordeaux = [44.8397534, -0.5739364];
            let osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
            let osmAttrib = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
            let osm = L.tileLayer(osmUrl, {maxZoom: 18, attribution: osmAttrib});
            //restriction géographique
            var corner1 = L.latLng(44.7426, -0.7526);
            var corner2 = L.latLng(44.9801, -0.2935);
            var bounds = L.latLngBounds(corner1, corner2);



            let map = L.map('map').setView(bordeaux, 14);
            map.setMaxBounds(bounds);
            map.options.maxZoom = 18;
            map.options.minZoom = 13;





            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox.streets',
                accessToken: 'pk.eyJ1IjoiaWJ1c2hpZ2luIiwiYSI6ImNqcXJ1d3lwdjBnZXo0MmxqZWRyMGIzdmEifQ.MAtmFHO16MD5osbZotlXYw'
            }).addTo(map);




            //Heritage de la classe L.icon pour passer des attributs customs :
            // Non recupérable dans la balise img
             var CustomL = L.Icon.extend({
                 options: {
                     iconSize: [55, 60],
                     shadowUrl: '{{ asset("img/marker-shadow.png") }}',
                     shadowAnchor: [10, 20],
                     iconAnchor:   [20, 35],
                 }
            });

            //Création des icones
            var markerPosition = L.icon({
                iconUrl: '{{ asset("img/markerPosition.png") }}',
                iconSize:     [20, 20], // size of the icon
            });
            var markerBlue = new CustomL({
                iconUrl: '{{ asset("img/marker-blue.png") }}',
                item_cat: 'categorie1',
            });

            var markerPink = new CustomL({
                iconUrl: '{{ asset("img/marker-pink.png") }}',
                item_cat: 'categorie2',
            });
            var markerGreen = new CustomL({
                iconUrl: '{{ asset("img/marker-green.png") }}',
                item_cat: 'categorie3',
            });

            var markerYellow = new CustomL({
                iconUrl: '{{ asset("img/marker-yellow.png") }}',
                item_cat: 'categorie4',
            });
            var markerPoint = L.icon({
                iconUrl: '{{ asset("img/markerPoint.png") }}',
                iconSize:     [30, 49], // size of the icon
            });

            //Géolocalisation

            map.locate({setView: true, maxZoom: 16});
            function onLocationFound(e) {
                L.marker(e.latlng, {icon: markerPosition}).addTo(map);
            }
            map.on('locationfound', onLocationFound);
            function onLocationError(e) {
                // alert(e.message);
            }
            map.on('locationerror', onLocationError);


            //A partir d'ici, c'est custom selon la view
            //La menace de torture s'arrête ici



            {% for key, latitude in locations_lat %}
            let latitude{{ key }} = {{ latitude }};
            {% endfor %}

            {% for key, longitude in locations_long %}
            let longitude{{ key }} = {{ longitude }};
            {% endfor %}

            {% for key, address_id in address_ids %}
            let item{{ key }} = {{ address_id }};
            {% endfor %}

            {% for key, cat in address_cat %}
            let item_cat{{ key }} = '{{ cat }}';
            {% endfor %}

            {% set nbAddress = nbAddress-1 %}


            {% for i in 0..nbAddress %}

            var markerIcon;
            if(item_cat{{ i }} === 'categorie1'){
                markerIcon = markerBlue;
            }
            if(item_cat{{ i }} === 'categorie2'){
                markerIcon = markerPink;
            }
            if(item_cat{{ i }} === 'categorie3'){
                markerIcon = markerGreen;
            }
            if(item_cat{{ i }} === 'categorie4'){
                markerIcon = markerYellow;
            }

            var param = item_cat{{ i }} + '_' + item{{ i }};


            var marker{{ i }} = L.marker([latitude{{ i }}, longitude{{ i }}], {icon: markerIcon, alt: param}).addTo(map);
            {% endfor %}

            // Stockage des résultat de recherche dans une variable pour pouvoir revenir en ajax sur la page des
            // résultats

            //TODO QUAND UNE RECHERCHE OU APPLICATION DE FILTRE PAR L UTILISATEUR SERA EFFECTUE,
            // IL FAUDRA INCLURE LA MISE A JOUR DE LA VARIABLE result-content

            var result_content = $('#addressList').html();


            // Gestion du CSS dynamique pour le lien vers les pages boutique




            var currentIcon;
            var viewStatus ="all";

            //Barre de recherche
            var searchBar = document.getElementById('searchBar');
            searchBar.addEventListener('input', function(){
                var input = document.getElementById('searchBar');
                var filter = input.value.toUpperCase();
                var div = document.getElementById('addressLoop');
                var a = div.getElementsByTagName('a');
                var i;
                var cat, subCat, name;
                var catValue, subCatValue, nameValue;
                for (i = 0; i < a.length; i++) {

                    cat = a[i].getElementsByClassName('cat')[0];
                    subCat = a[i].getElementsByClassName('subCat')[0];
                    name = a[i].getElementsByClassName('name')[0];
                    catValue = cat.textContent || cat.innerText;
                    subCatValue = subCat.textContent || subCat.innerText;
                    nameValue = name.textContent || name.innerText;
                    console.log('2', catValue, subCatValue, nameValue);
                    if(
                        catValue.toUpperCase().indexOf(filter) > -1 ||
                        subCatValue.toUpperCase().indexOf(filter) > -1 ||
                        nameValue.toUpperCase().indexOf(filter) > -1
                    ){
                        a[i].style.display = "";
                    }else{
                        a[i].style.display = 'none';
                    }



                }

            });

            //filtres
            let cat1 = document.getElementById("searchCat1");
            let cat2 = document.getElementById("searchCat2");
            let cat3 = document.getElementById("searchCat3");
            let cat4 = document.getElementById("searchCat4");
            let searchBar2 = document.getElementById("searchBar");

            cat1.addEventListener("click", function () {
                searchBar2.value = 'Categorie1';
            });
            cat2.addEventListener("click", function () {
                searchBar2.value = 'Categorie2';
            });
            cat3.addEventListener("click", function () {
                searchBar2.value = 'Categorie3';
            });
            cat4.addEventListener("click", function () {
                searchBar2.value = 'Categorie4';
            });


            $('#addressList').on('mouseenter', '.oneShop', function(){
                $(this).css('background-color', '#a7abb2');
                let address_id = $(this).attr('data-id');
                if(viewStatus === "all"){
                    currentIcon = $("img[alt='"+address_id+"']").attr('src');
                    $("img[alt='"+address_id+"']").attr('src', '{{ asset("img/markerPoint.png") }}');
                }
            });



            $('#addressList').on('mouseleave', '.oneShop', function(){
                $(this).css('background-color', '#d7dae0');
                let address_id = $(this).attr('data-id');
                if(viewStatus === "all") {
                    $("img[alt='" + address_id + "']").attr('src', currentIcon);
                }
            });

            // Surbrillance des infos boutique au survol de l'icone sur la carte

            $('.leaflet-marker-icon').on('mouseenter', function(){
                var address_id = $(this).attr('alt');
                $("article[data-id='"+address_id+"']").css('background-color', '#a7abb2');
                if (viewStatus === "all"){
                    currentIcon = $("img[alt='"+address_id+"']").attr('src');
                    $("img[alt='"+address_id+"']").attr('src', '{{ asset("img/markerPoint.png") }}');
                }

            })

            $('.leaflet-marker-icon').on('mouseleave', function(){
                var address_id = $(this).attr('alt');
                $("article[data-id='"+address_id+"']").css('background-color', '#d7dae0');
                if (viewStatus === "all"){
                    $("img[alt='"+address_id+"']").attr('src', currentIcon);
                }
            })




            // Ajax => Info Boutique au clic sur le pointeur de la carte

            $('.leaflet-marker-icon').on('click', function(){
                var currentDataID = $(this).attr('alt');
                var address_id = currentDataID.slice(11);
                // On supprime toutes les icones qui ne sont pas celle de la boutique selectionnée:
                $('.leaflet-marker-pane img[alt != "'+currentDataID+'"]').css('display','none');
                $('.leaflet-shadow-pane').css('display','none');

                // La vue passe en singleView par ajax, gestion du visuel
                // console.log(viewStatus);
                if (viewStatus === "all"){
                    // Requete AJAX :
                    $.ajax({
                        type: 'post',
                        url: '{{ path("singleView") }}',
                        data: 'address_id=' + address_id + '&result_content=' +result_content,
                        datatype: 'html',
                        success: function(result){
                            $("#addressList").html(result);
                        },
                        error: function(error){
                            console.log(error)
                        },
                    });
                    viewStatus ="single";
                }
            })

            // Ajax => Info Boutique au clic sur la div du magasin
            $('#addressList').on('click', '.oneShop', function(){
                // La vue passe en singleView par ajax, gestion du visuel

                var currentDataID = $(this).attr('data-id');
                var address_id = currentDataID.slice(11);
                // On supprime toutes les icones qui ne sont pas celle de la boutique selectionnée:
                $('.leaflet-marker-pane img[alt != "'+currentDataID+'"]').css('display','none');
                $('.leaflet-shadow-pane').css('display','none');

                if(viewStatus === "all"){
                    //Requete AJAX
                    $.ajax({
                        type: 'post',
                        url: '{{ path("singleView") }}',
                        data: 'address_id=' + address_id,
                        datatype: 'html',
                        success: function(result){
                            $("#addressList").html(result);
                        },
                        error: function(error){
                            console.log(error)
                        },
                    });
                    viewStatus = "single";
                }
            })

            // Ajax => Retourner sur l'affichage des résultats
            $('#addressList').on('click', '#result_content', function(){

                // La vue revient sur les resultats par ajax, gestion du visuel
                viewStatus = "all";

                $.ajax({
                    type: 'post',
                    url: '{{ path("returnToResult") }}',
                    data: 'result_content=' + result_content,
                    datatype: 'html',
                    success: function(result){
                        $("#addressList").html(result);
                    },
                    error: function(error){
                        console.log(error)
                    },
                });
                // On remet l'icone qu'avait le magasin sur la carte avant que l'on clic dessus
                // Depuis le data ID genéré depuis ajax/returnToResult.html.twig
                var dataID = $(this).attr('data-id');
                var cat = dataID.slice(9,10);
                var markerAddress = $("img[alt='"+dataID+"']");
                if(cat ==='1'){
                    markerAddress.attr('src', '{{ asset("img/marker-blue.png") }}');
                }
                if(cat ==='2'){
                    markerAddress.attr('src', '{{ asset("img/marker-pink.png") }}');
                }
                if(cat ==='3'){
                    markerAddress.attr('src', '{{ asset("img/marker-green.png") }}');
                }
                if(cat ==='4'){
                    markerAddress.attr('src', '{{ asset("img/marker-yellow.png") }}');
                }
                // On reaffiche tous les marker vu qu'on reviens a une vue ALL
                $('.leaflet-shadow-pane').css('display','block');
                $('.leaflet-marker-pane img').css('display','block');
            })

        });
    </script>
{% endblock %}
